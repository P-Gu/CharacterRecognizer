{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Using TensorFlow backend.\n"
     ]
    }
   ],
   "source": [
    "import sys\n",
    "import keras\n",
    "from keras.models import Sequential\n",
    "from keras.optimizers import Adadelta\n",
    "from keras.layers import Dense, Activation, Dropout, Flatten, Conv2D, MaxPooling2D, AveragePooling2D\n",
    "from keras.layers.normalization import BatchNormalization\n",
    "from keras import regularizers\n",
    "import numpy as np\n",
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "from keras.optimizers import Adam\n",
    "from keras.models import load_model\n",
    "\n",
    "from PIL import Image\n",
    "import cv2\n",
    "from sklearn.utils import shuffle\n",
    "import keras.metrics\n",
    "from tensorflow import random"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: opencv-python in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (4.1.2.30)\r\n",
      "Requirement already satisfied: numpy>=1.11.3 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from opencv-python) (1.16.2)\r\n"
     ]
    }
   ],
   "source": [
    "from azureml.core.workspace import Workspace\n",
    "ws = Workspace.from_config()\n",
    "from azureml.core import Experiment\n",
    "experiment = Experiment(workspace=ws, name=\"Oct25Alex\")\n",
    "\n",
    "#!{sys.executable} -m pip install opencv-python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "modeln = load_model(\"my_modelDec8_n.h5\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "3\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "6\n",
      "(618, 227, 227, 3)\n"
     ]
    }
   ],
   "source": [
    "X=[]\n",
    "Y=[]\n",
    "resize = 227\n",
    "labelSet = set()\n",
    "\n",
    "'''\n",
    "for root, dirs, files in os.walk(\"000_hatsune_miku\", topdown=True):\n",
    "    for file in files:\n",
    "        if file!=\".DS_Store\":\n",
    "            #label = os.path.basename(root)[-1]\n",
    "            label = 0\n",
    "            labelSet.add(label)\n",
    "            img = cv2.imread(os.path.join(root,file))         \n",
    "            img = cv2.resize(img,(resize,resize))\n",
    "            img = np.asarray(img)\n",
    "            img = img.astype(np.float32)\n",
    "            img = (img / 127.5) - 1\n",
    "            X.append(img)\n",
    "            Y.append(label)\n",
    "for root, dirs, files in os.walk(\"001_kinomoto_sakura\", topdown=True):\n",
    "    for file in files:\n",
    "        if file!=\".DS_Store\":\n",
    "            #label = os.path.basename(root)[-1]\n",
    "            label = 1\n",
    "            labelSet.add(label)\n",
    "            img = cv2.imread(os.path.join(root,file))         \n",
    "            img = cv2.resize(img,(resize,resize))\n",
    "            img = np.asarray(img)\n",
    "            img = img.astype(np.float32)\n",
    "            img = (img / 127.5) - 1\n",
    "            X.append(img)\n",
    "            Y.append(label)\n",
    "for root, dirs, files in os.walk(\"002_suzumiya_haruhi\", topdown=True):\n",
    "    for file in files:\n",
    "        if file!=\".DS_Store\":\n",
    "            #label = os.path.basename(root)[-1]\n",
    "            label = 2\n",
    "            labelSet.add(label)\n",
    "            img = cv2.imread(os.path.join(root,file))         \n",
    "            img = cv2.resize(img,(resize,resize))\n",
    "            img = np.asarray(img)\n",
    "            img = img.astype(np.float32)\n",
    "            img = (img / 127.5) - 1\n",
    "            X.append(img)\n",
    "            Y.append(label)\n",
    "for root, dirs, files in os.walk(\"003_fate_testarossa\", topdown=True):\n",
    "    for file in files:\n",
    "        if file!=\".DS_Store\":\n",
    "            #label = os.path.basename(root)[-1]\n",
    "            label = 3\n",
    "            labelSet.add(label)\n",
    "            img = cv2.imread(os.path.join(root,file))         \n",
    "            img = cv2.resize(img,(resize,resize))\n",
    "            img = np.asarray(img)\n",
    "            img = img.astype(np.float32)\n",
    "            img = (img / 127.5) - 1\n",
    "            X.append(img)\n",
    "            Y.append(label)\n",
    "'''\n",
    "            \n",
    "for root, dirs, files in os.walk(\"faces\", topdown=True):\n",
    "    if label=='7': break\n",
    "    for file in files:\n",
    "        if label=='7': break\n",
    "        if file!=\".DS_Store\" and file!=\"color.csv\":\n",
    "            label = os.path.basename(root)[2]\n",
    "            if label=='7': break\n",
    "            print(label)\n",
    "            #print(os.path.join(root,file))\n",
    "            #label = 0\n",
    "            labelSet.add(label)\n",
    "            img = cv2.imread(os.path.join(root,file))         \n",
    "            img = cv2.resize(img,(resize,resize))\n",
    "            img = np.asarray(img)\n",
    "            img = img.astype(np.float32)\n",
    "            img = (img / 127.5) - 1\n",
    "            X.append(img)\n",
    "            Y.append(label)\n",
    "            \n",
    "X = np.asarray(X)\n",
    "print(X.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def alex():\n",
    "    #Instantiate an empty model\n",
    "    model = Sequential()\n",
    "\n",
    "    # 1st Convolutional Layer\n",
    "    model.add(Conv2D(filters=96, input_shape=(227,227,3), kernel_size=(11,11), strides=(4,4), padding='valid'))#, kernel_regularizer=regularizers.l2(0.01)))\n",
    "    model.add(Activation('relu'))\n",
    "    # Max Pooling\n",
    "    model.add(MaxPooling2D(pool_size=(2,2), strides=(2,2), padding='valid'))\n",
    "\n",
    "    # 2nd Convolutional Layer\n",
    "    model.add(Conv2D(filters=256, kernel_size=(5,5), strides=(1,1), padding='same'))#, kernel_regularizer=regularizers.l2(0.01)))\n",
    "    model.add(Activation('relu'))\n",
    "    # Max Pooling\n",
    "    model.add(MaxPooling2D(pool_size=(2,2), strides=(2,2), padding='valid'))\n",
    "\n",
    "    # 3rd Convolutional Layer\n",
    "    model.add(Conv2D(filters=384, kernel_size=(3,3), strides=(1,1), padding='same'))#, kernel_regularizer=regularizers.l2(0.01)))\n",
    "    model.add(Activation('relu'))\n",
    "\n",
    "    # 4th Convolutional Layer\n",
    "    model.add(Conv2D(filters=384, kernel_size=(3,3), strides=(1,1), padding='same'))#, kernel_regularizer=regularizers.l2(0.01)))\n",
    "    model.add(Activation('relu'))\n",
    "\n",
    "    # 5th Convolutional Layer\n",
    "    model.add(Conv2D(filters=256, kernel_size=(3,3), strides=(1,1), padding='same'))#, kernel_regularizer=regularizers.l2(0.01)))\n",
    "    model.add(Activation('relu'))\n",
    "    # Max Pooling\n",
    "    model.add(MaxPooling2D(pool_size=(2,2), strides=(2,2), padding='valid'))\n",
    "\n",
    "    model.add(Dropout(0.5))\n",
    "    # Passing it to a Fully Connected layer\n",
    "    model.add(Flatten())\n",
    "    # 1st Fully Connected Layer\n",
    "    model.add(Dense(4096, input_shape=(227*227*3,)))#, kernel_regularizer=regularizers.l2(0.01)))\n",
    "    model.add(Activation('relu'))\n",
    "    # Add Dropout to prevent overfitting\n",
    "    model.add(Dropout(0.5))\n",
    "\n",
    "    # 2nd Fully Connected Layer\n",
    "    model.add(Dense(4096))#, kernel_regularizer=regularizers.l2(0.01)))\n",
    "    model.add(Activation('relu'))\n",
    "    # Add Dropout\n",
    "    model.add(Dropout(0.5))\n",
    "\n",
    "    # 3rd Fully Connected Layer\n",
    "    model.add(Dense(1000))#, kernel_regularizer=regularizers.l2(0.01)))\n",
    "    model.add(Activation('relu'))\n",
    "\n",
    "    # Output Layer\n",
    "    model.add(Dense(len(labelList)))#, kernel_regularizer=regularizers.l2(0.01)))\n",
    "    model.add(Activation('softmax'))\n",
    "\n",
    "    model.summary()\n",
    "\n",
    "    # Compile the model\n",
    "    opt = Adadelta(learning_rate = 0.01, rho = 0.97)\n",
    "    #model.compile(loss=keras.losses.mean_squared_error, optimizer=opt, metrics=[\"recall\"])\n",
    "    model.compile(loss='mse', optimizer=Adadelta(learning_rate = 0.005, rho = 0.97), metrics=[keras.metrics.Recall()])\n",
    "    \n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1 0 0 ... 0 0 0]\n",
      " [1 0 0 ... 0 0 0]\n",
      " [1 0 0 ... 0 0 0]\n",
      " ...\n",
      " [0 0 0 ... 0 0 1]\n",
      " [0 0 0 ... 0 0 1]\n",
      " [0 0 0 ... 0 0 1]]\n",
      "['0', '1', '2', '3', '4', '5', '6']\n"
     ]
    }
   ],
   "source": [
    "labelList = list(labelSet)\n",
    "labelList.sort()\n",
    "\n",
    "for i in range(len(Y)):\n",
    "   #This is not one-hot\n",
    "   l = [0]*len(labelList)\n",
    "   index = labelList.index(Y[i])\n",
    "   l[index] = 1\n",
    "   Y[i] = l\n",
    "\n",
    "Y = np.asarray(Y)\n",
    "\n",
    "np.random.seed(1001)\n",
    "random.set_seed(1001)\n",
    "p = np.random.permutation(X.shape[0])\n",
    "Xn = X[p]\n",
    "Yn = Y[p]\n",
    "\n",
    "print(Y)\n",
    "print(labelList)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[0 0 0 ... 0 1 0]\n",
      " [0 0 0 ... 0 0 0]\n",
      " [0 0 0 ... 0 1 0]\n",
      " ...\n",
      " [0 0 0 ... 0 1 0]\n",
      " [0 0 0 ... 0 0 0]\n",
      " [0 1 0 ... 0 0 0]]\n"
     ]
    }
   ],
   "source": [
    "print(Yn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Separate training set and test set\n",
    "trainPercent = 0.85\n",
    "\n",
    "X_train = Xn[:int(X.shape[0]*trainPercent),:,:,:]\n",
    "X_test = Xn[int(X.shape[0]*trainPercent):,:,:,:]\n",
    "Y_train = Yn[:int(Y.shape[0]*trainPercent),:]\n",
    "Y_test = Yn[int(Y.shape[0]*trainPercent):,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "lines_to_next_cell": 0,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_2\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "conv2d_2 (Conv2D)            (None, 55, 55, 96)        34944     \n",
      "_________________________________________________________________\n",
      "activation_1 (Activation)    (None, 55, 55, 96)        0         \n",
      "_________________________________________________________________\n",
      "max_pooling2d_1 (MaxPooling2 (None, 27, 27, 96)        0         \n",
      "_________________________________________________________________\n",
      "conv2d_3 (Conv2D)            (None, 27, 27, 256)       614656    \n",
      "_________________________________________________________________\n",
      "activation_2 (Activation)    (None, 27, 27, 256)       0         \n",
      "_________________________________________________________________\n",
      "max_pooling2d_2 (MaxPooling2 (None, 13, 13, 256)       0         \n",
      "_________________________________________________________________\n",
      "conv2d_4 (Conv2D)            (None, 13, 13, 384)       885120    \n",
      "_________________________________________________________________\n",
      "activation_3 (Activation)    (None, 13, 13, 384)       0         \n",
      "_________________________________________________________________\n",
      "conv2d_5 (Conv2D)            (None, 13, 13, 384)       1327488   \n",
      "_________________________________________________________________\n",
      "activation_4 (Activation)    (None, 13, 13, 384)       0         \n",
      "_________________________________________________________________\n",
      "conv2d_6 (Conv2D)            (None, 13, 13, 256)       884992    \n",
      "_________________________________________________________________\n",
      "activation_5 (Activation)    (None, 13, 13, 256)       0         \n",
      "_________________________________________________________________\n",
      "max_pooling2d_3 (MaxPooling2 (None, 6, 6, 256)         0         \n",
      "_________________________________________________________________\n",
      "dropout_1 (Dropout)          (None, 6, 6, 256)         0         \n",
      "_________________________________________________________________\n",
      "flatten_1 (Flatten)          (None, 9216)              0         \n",
      "_________________________________________________________________\n",
      "dense_1 (Dense)              (None, 4096)              37752832  \n",
      "_________________________________________________________________\n",
      "activation_6 (Activation)    (None, 4096)              0         \n",
      "_________________________________________________________________\n",
      "dropout_2 (Dropout)          (None, 4096)              0         \n",
      "_________________________________________________________________\n",
      "dense_2 (Dense)              (None, 4096)              16781312  \n",
      "_________________________________________________________________\n",
      "activation_7 (Activation)    (None, 4096)              0         \n",
      "_________________________________________________________________\n",
      "dropout_3 (Dropout)          (None, 4096)              0         \n",
      "_________________________________________________________________\n",
      "dense_3 (Dense)              (None, 1000)              4097000   \n",
      "_________________________________________________________________\n",
      "activation_8 (Activation)    (None, 1000)              0         \n",
      "_________________________________________________________________\n",
      "dense_4 (Dense)              (None, 7)                 7007      \n",
      "_________________________________________________________________\n",
      "activation_9 (Activation)    (None, 7)                 0         \n",
      "=================================================================\n",
      "Total params: 62,385,351\n",
      "Trainable params: 62,385,351\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "Epoch 1/1000\n",
      " - 20s - loss: 0.1227 - recall_1: 0.0000e+00\n",
      "Epoch 2/1000\n",
      " - 2s - loss: 0.1227 - recall_1: 0.0000e+00\n",
      "Epoch 3/1000\n",
      " - 2s - loss: 0.1228 - recall_1: 0.0000e+00\n",
      "Epoch 4/1000\n",
      " - 2s - loss: 0.1227 - recall_1: 0.0000e+00\n",
      "Epoch 5/1000\n",
      " - 2s - loss: 0.1226 - recall_1: 0.0000e+00\n",
      "Epoch 6/1000\n",
      " - 2s - loss: 0.1228 - recall_1: 0.0000e+00\n",
      "Epoch 7/1000\n",
      " - 2s - loss: 0.1226 - recall_1: 0.0000e+00\n",
      "Epoch 8/1000\n",
      " - 2s - loss: 0.1226 - recall_1: 0.0000e+00\n",
      "Epoch 9/1000\n",
      " - 2s - loss: 0.1228 - recall_1: 0.0000e+00\n",
      "Epoch 10/1000\n",
      " - 2s - loss: 0.1226 - recall_1: 0.0000e+00\n",
      "Epoch 11/1000\n",
      " - 2s - loss: 0.1224 - recall_1: 0.0000e+00\n",
      "Epoch 12/1000\n",
      " - 2s - loss: 0.1227 - recall_1: 0.0000e+00\n",
      "Epoch 13/1000\n",
      " - 2s - loss: 0.1227 - recall_1: 0.0000e+00\n",
      "Epoch 14/1000\n",
      " - 2s - loss: 0.1226 - recall_1: 0.0000e+00\n",
      "Epoch 15/1000\n",
      " - 2s - loss: 0.1227 - recall_1: 0.0000e+00\n",
      "Epoch 16/1000\n",
      " - 2s - loss: 0.1226 - recall_1: 0.0000e+00\n",
      "Epoch 17/1000\n",
      " - 2s - loss: 0.1224 - recall_1: 0.0000e+00\n",
      "Epoch 18/1000\n",
      " - 2s - loss: 0.1225 - recall_1: 0.0000e+00\n",
      "Epoch 19/1000\n",
      " - 2s - loss: 0.1227 - recall_1: 0.0000e+00\n",
      "Epoch 20/1000\n",
      " - 2s - loss: 0.1225 - recall_1: 0.0000e+00\n",
      "Epoch 21/1000\n",
      " - 2s - loss: 0.1225 - recall_1: 0.0000e+00\n",
      "Epoch 22/1000\n",
      " - 2s - loss: 0.1224 - recall_1: 0.0000e+00\n",
      "Epoch 23/1000\n",
      " - 2s - loss: 0.1225 - recall_1: 0.0000e+00\n",
      "Epoch 24/1000\n",
      " - 2s - loss: 0.1225 - recall_1: 0.0000e+00\n",
      "Epoch 25/1000\n",
      " - 2s - loss: 0.1225 - recall_1: 0.0000e+00\n",
      "Epoch 26/1000\n",
      " - 2s - loss: 0.1225 - recall_1: 0.0000e+00\n",
      "Epoch 27/1000\n",
      " - 2s - loss: 0.1225 - recall_1: 0.0000e+00\n",
      "Epoch 28/1000\n",
      " - 2s - loss: 0.1225 - recall_1: 0.0000e+00\n",
      "Epoch 29/1000\n",
      " - 2s - loss: 0.1224 - recall_1: 0.0000e+00\n",
      "Epoch 30/1000\n",
      " - 2s - loss: 0.1224 - recall_1: 0.0000e+00\n",
      "Epoch 31/1000\n",
      " - 2s - loss: 0.1223 - recall_1: 0.0000e+00\n",
      "Epoch 32/1000\n",
      " - 2s - loss: 0.1223 - recall_1: 0.0000e+00\n",
      "Epoch 33/1000\n",
      " - 2s - loss: 0.1222 - recall_1: 0.0000e+00\n",
      "Epoch 34/1000\n",
      " - 2s - loss: 0.1223 - recall_1: 0.0000e+00\n",
      "Epoch 35/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 36/1000\n",
      " - 2s - loss: 0.1223 - recall_1: 0.0000e+00\n",
      "Epoch 37/1000\n",
      " - 2s - loss: 0.1224 - recall_1: 0.0000e+00\n",
      "Epoch 38/1000\n",
      " - 2s - loss: 0.1226 - recall_1: 0.0000e+00\n",
      "Epoch 39/1000\n",
      " - 2s - loss: 0.1222 - recall_1: 0.0000e+00\n",
      "Epoch 40/1000\n",
      " - 2s - loss: 0.1223 - recall_1: 0.0000e+00\n",
      "Epoch 41/1000\n",
      " - 2s - loss: 0.1222 - recall_1: 0.0000e+00\n",
      "Epoch 42/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 43/1000\n",
      " - 2s - loss: 0.1223 - recall_1: 0.0000e+00\n",
      "Epoch 44/1000\n",
      " - 2s - loss: 0.1222 - recall_1: 0.0000e+00\n",
      "Epoch 45/1000\n",
      " - 2s - loss: 0.1224 - recall_1: 0.0000e+00\n",
      "Epoch 46/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 47/1000\n",
      " - 2s - loss: 0.1223 - recall_1: 0.0000e+00\n",
      "Epoch 48/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 49/1000\n",
      " - 2s - loss: 0.1222 - recall_1: 0.0000e+00\n",
      "Epoch 50/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 51/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 52/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 53/1000\n",
      " - 2s - loss: 0.1222 - recall_1: 0.0000e+00\n",
      "Epoch 54/1000\n",
      " - 2s - loss: 0.1222 - recall_1: 0.0000e+00\n",
      "Epoch 55/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 56/1000\n",
      " - 2s - loss: 0.1220 - recall_1: 0.0000e+00\n",
      "Epoch 57/1000\n",
      " - 2s - loss: 0.1218 - recall_1: 0.0000e+00\n",
      "Epoch 58/1000\n",
      " - 2s - loss: 0.1222 - recall_1: 0.0000e+00\n",
      "Epoch 59/1000\n",
      " - 2s - loss: 0.1220 - recall_1: 0.0000e+00\n",
      "Epoch 60/1000\n",
      " - 2s - loss: 0.1220 - recall_1: 0.0000e+00\n",
      "Epoch 61/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 62/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 63/1000\n",
      " - 2s - loss: 0.1220 - recall_1: 0.0000e+00\n",
      "Epoch 64/1000\n",
      " - 2s - loss: 0.1219 - recall_1: 0.0000e+00\n",
      "Epoch 65/1000\n",
      " - 2s - loss: 0.1217 - recall_1: 0.0000e+00\n",
      "Epoch 66/1000\n",
      " - 2s - loss: 0.1221 - recall_1: 0.0000e+00\n",
      "Epoch 67/1000\n",
      " - 2s - loss: 0.1220 - recall_1: 0.0000e+00\n",
      "Epoch 68/1000\n",
      " - 2s - loss: 0.1220 - recall_1: 0.0000e+00\n",
      "Epoch 69/1000\n",
      " - 2s - loss: 0.1217 - recall_1: 0.0000e+00\n",
      "Epoch 70/1000\n",
      " - 2s - loss: 0.1217 - recall_1: 0.0000e+00\n",
      "Epoch 71/1000\n",
      " - 2s - loss: 0.1217 - recall_1: 0.0000e+00\n",
      "Epoch 72/1000\n",
      " - 2s - loss: 0.1220 - recall_1: 0.0000e+00\n",
      "Epoch 73/1000\n",
      " - 2s - loss: 0.1216 - recall_1: 0.0000e+00\n",
      "Epoch 74/1000\n",
      " - 2s - loss: 0.1216 - recall_1: 0.0000e+00\n",
      "Epoch 75/1000\n",
      " - 2s - loss: 0.1218 - recall_1: 0.0000e+00\n",
      "Epoch 76/1000\n",
      " - 2s - loss: 0.1217 - recall_1: 0.0000e+00\n",
      "Epoch 77/1000\n",
      " - 2s - loss: 0.1217 - recall_1: 0.0000e+00\n",
      "Epoch 78/1000\n",
      " - 2s - loss: 0.1217 - recall_1: 0.0000e+00\n",
      "Epoch 79/1000\n",
      " - 2s - loss: 0.1217 - recall_1: 0.0000e+00\n",
      "Epoch 80/1000\n",
      " - 2s - loss: 0.1218 - recall_1: 0.0000e+00\n",
      "Epoch 81/1000\n",
      " - 2s - loss: 0.1215 - recall_1: 0.0000e+00\n",
      "Epoch 82/1000\n",
      " - 2s - loss: 0.1216 - recall_1: 0.0000e+00\n",
      "Epoch 83/1000\n",
      " - 2s - loss: 0.1215 - recall_1: 0.0000e+00\n",
      "Epoch 84/1000\n",
      " - 2s - loss: 0.1217 - recall_1: 0.0000e+00\n",
      "Epoch 85/1000\n",
      " - 2s - loss: 0.1218 - recall_1: 0.0000e+00\n",
      "Epoch 86/1000\n",
      " - 2s - loss: 0.1216 - recall_1: 0.0000e+00\n",
      "Epoch 87/1000\n",
      " - 2s - loss: 0.1216 - recall_1: 0.0000e+00\n",
      "Epoch 88/1000\n",
      " - 2s - loss: 0.1218 - recall_1: 0.0000e+00\n",
      "Epoch 89/1000\n",
      " - 2s - loss: 0.1216 - recall_1: 0.0000e+00\n",
      "Epoch 90/1000\n",
      " - 2s - loss: 0.1216 - recall_1: 0.0000e+00\n",
      "Epoch 91/1000\n",
      " - 2s - loss: 0.1215 - recall_1: 0.0000e+00\n",
      "Epoch 92/1000\n",
      " - 2s - loss: 0.1216 - recall_1: 0.0000e+00\n",
      "Epoch 93/1000\n",
      " - 2s - loss: 0.1214 - recall_1: 0.0000e+00\n",
      "Epoch 94/1000\n",
      " - 2s - loss: 0.1215 - recall_1: 0.0000e+00\n",
      "Epoch 95/1000\n",
      " - 2s - loss: 0.1215 - recall_1: 0.0000e+00\n",
      "Epoch 96/1000\n",
      " - 2s - loss: 0.1216 - recall_1: 0.0000e+00\n",
      "Epoch 97/1000\n",
      " - 2s - loss: 0.1213 - recall_1: 0.0000e+00\n",
      "Epoch 98/1000\n",
      " - 2s - loss: 0.1211 - recall_1: 0.0000e+00\n",
      "Epoch 99/1000\n",
      " - 2s - loss: 0.1212 - recall_1: 0.0000e+00\n",
      "Epoch 100/1000\n",
      " - 2s - loss: 0.1213 - recall_1: 0.0000e+00\n",
      "Epoch 101/1000\n",
      " - 2s - loss: 0.1213 - recall_1: 0.0000e+00\n",
      "Epoch 102/1000\n",
      " - 2s - loss: 0.1214 - recall_1: 0.0000e+00\n",
      "Epoch 103/1000\n",
      " - 2s - loss: 0.1213 - recall_1: 0.0000e+00\n",
      "Epoch 104/1000\n",
      " - 2s - loss: 0.1212 - recall_1: 0.0000e+00\n",
      "Epoch 105/1000\n",
      " - 2s - loss: 0.1213 - recall_1: 0.0000e+00\n",
      "Epoch 106/1000\n",
      " - 2s - loss: 0.1212 - recall_1: 0.0000e+00\n",
      "Epoch 107/1000\n",
      " - 2s - loss: 0.1212 - recall_1: 0.0000e+00\n",
      "Epoch 108/1000\n",
      " - 2s - loss: 0.1212 - recall_1: 0.0000e+00\n",
      "Epoch 109/1000\n",
      " - 2s - loss: 0.1211 - recall_1: 0.0000e+00\n",
      "Epoch 110/1000\n",
      " - 2s - loss: 0.1211 - recall_1: 0.0000e+00\n",
      "Epoch 111/1000\n",
      " - 2s - loss: 0.1209 - recall_1: 0.0000e+00\n",
      "Epoch 112/1000\n",
      " - 2s - loss: 0.1212 - recall_1: 0.0000e+00\n",
      "Epoch 113/1000\n",
      " - 2s - loss: 0.1211 - recall_1: 0.0000e+00\n",
      "Epoch 114/1000\n",
      " - 2s - loss: 0.1209 - recall_1: 0.0000e+00\n",
      "Epoch 115/1000\n",
      " - 2s - loss: 0.1209 - recall_1: 0.0000e+00\n",
      "Epoch 116/1000\n",
      " - 2s - loss: 0.1210 - recall_1: 0.0000e+00\n",
      "Epoch 117/1000\n",
      " - 2s - loss: 0.1209 - recall_1: 0.0000e+00\n",
      "Epoch 118/1000\n",
      " - 2s - loss: 0.1210 - recall_1: 0.0000e+00\n",
      "Epoch 119/1000\n",
      " - 2s - loss: 0.1209 - recall_1: 0.0000e+00\n",
      "Epoch 120/1000\n",
      " - 2s - loss: 0.1210 - recall_1: 0.0000e+00\n",
      "Epoch 121/1000\n",
      " - 2s - loss: 0.1210 - recall_1: 0.0000e+00\n",
      "Epoch 122/1000\n",
      " - 2s - loss: 0.1207 - recall_1: 0.0000e+00\n",
      "Epoch 123/1000\n",
      " - 2s - loss: 0.1209 - recall_1: 0.0000e+00\n",
      "Epoch 124/1000\n",
      " - 2s - loss: 0.1209 - recall_1: 0.0000e+00\n",
      "Epoch 125/1000\n",
      " - 2s - loss: 0.1209 - recall_1: 0.0000e+00\n",
      "Epoch 126/1000\n",
      " - 2s - loss: 0.1209 - recall_1: 0.0000e+00\n",
      "Epoch 127/1000\n",
      " - 2s - loss: 0.1204 - recall_1: 0.0000e+00\n",
      "Epoch 128/1000\n",
      " - 2s - loss: 0.1206 - recall_1: 0.0000e+00\n",
      "Epoch 129/1000\n",
      " - 2s - loss: 0.1204 - recall_1: 0.0000e+00\n",
      "Epoch 130/1000\n",
      " - 2s - loss: 0.1205 - recall_1: 0.0000e+00\n",
      "Epoch 131/1000\n",
      " - 2s - loss: 0.1203 - recall_1: 0.0000e+00\n",
      "Epoch 132/1000\n",
      " - 2s - loss: 0.1206 - recall_1: 0.0000e+00\n",
      "Epoch 133/1000\n",
      " - 2s - loss: 0.1205 - recall_1: 0.0000e+00\n",
      "Epoch 134/1000\n",
      " - 2s - loss: 0.1202 - recall_1: 0.0000e+00\n",
      "Epoch 135/1000\n",
      " - 2s - loss: 0.1203 - recall_1: 0.0000e+00\n",
      "Epoch 136/1000\n",
      " - 2s - loss: 0.1206 - recall_1: 0.0000e+00\n",
      "Epoch 137/1000\n",
      " - 2s - loss: 0.1201 - recall_1: 0.0000e+00\n",
      "Epoch 138/1000\n",
      " - 2s - loss: 0.1203 - recall_1: 0.0000e+00\n",
      "Epoch 139/1000\n",
      " - 2s - loss: 0.1200 - recall_1: 0.0000e+00\n",
      "Epoch 140/1000\n",
      " - 2s - loss: 0.1201 - recall_1: 0.0000e+00\n",
      "Epoch 141/1000\n",
      " - 2s - loss: 0.1204 - recall_1: 0.0000e+00\n",
      "Epoch 142/1000\n",
      " - 2s - loss: 0.1202 - recall_1: 0.0000e+00\n",
      "Epoch 143/1000\n",
      " - 2s - loss: 0.1196 - recall_1: 0.0000e+00\n",
      "Epoch 144/1000\n",
      " - 2s - loss: 0.1201 - recall_1: 0.0000e+00\n",
      "Epoch 145/1000\n",
      " - 2s - loss: 0.1200 - recall_1: 0.0000e+00\n",
      "Epoch 146/1000\n",
      " - 2s - loss: 0.1199 - recall_1: 0.0000e+00\n",
      "Epoch 147/1000\n",
      " - 2s - loss: 0.1196 - recall_1: 0.0000e+00\n",
      "Epoch 148/1000\n",
      " - 2s - loss: 0.1199 - recall_1: 0.0000e+00\n",
      "Epoch 149/1000\n",
      " - 2s - loss: 0.1197 - recall_1: 0.0000e+00\n",
      "Epoch 150/1000\n",
      " - 2s - loss: 0.1198 - recall_1: 0.0000e+00\n",
      "Epoch 151/1000\n",
      " - 2s - loss: 0.1197 - recall_1: 0.0000e+00\n",
      "Epoch 152/1000\n",
      " - 2s - loss: 0.1193 - recall_1: 0.0000e+00\n",
      "Epoch 153/1000\n",
      " - 2s - loss: 0.1194 - recall_1: 0.0000e+00\n",
      "Epoch 154/1000\n",
      " - 2s - loss: 0.1197 - recall_1: 0.0000e+00\n",
      "Epoch 155/1000\n",
      " - 2s - loss: 0.1192 - recall_1: 0.0000e+00\n",
      "Epoch 156/1000\n",
      " - 2s - loss: 0.1193 - recall_1: 0.0000e+00\n",
      "Epoch 157/1000\n",
      " - 2s - loss: 0.1190 - recall_1: 0.0000e+00\n",
      "Epoch 158/1000\n",
      " - 2s - loss: 0.1188 - recall_1: 0.0000e+00\n",
      "Epoch 159/1000\n",
      " - 2s - loss: 0.1188 - recall_1: 0.0000e+00\n",
      "Epoch 160/1000\n",
      " - 2s - loss: 0.1189 - recall_1: 0.0000e+00\n",
      "Epoch 161/1000\n",
      " - 2s - loss: 0.1192 - recall_1: 0.0000e+00\n",
      "Epoch 162/1000\n",
      " - 2s - loss: 0.1188 - recall_1: 0.0000e+00\n",
      "Epoch 163/1000\n",
      " - 2s - loss: 0.1191 - recall_1: 0.0000e+00\n",
      "Epoch 164/1000\n",
      " - 2s - loss: 0.1189 - recall_1: 0.0000e+00\n",
      "Epoch 165/1000\n",
      " - 2s - loss: 0.1189 - recall_1: 0.0000e+00\n",
      "Epoch 166/1000\n",
      " - 2s - loss: 0.1184 - recall_1: 0.0000e+00\n",
      "Epoch 167/1000\n",
      " - 2s - loss: 0.1181 - recall_1: 0.0000e+00\n",
      "Epoch 168/1000\n",
      " - 2s - loss: 0.1186 - recall_1: 0.0000e+00\n",
      "Epoch 169/1000\n",
      " - 2s - loss: 0.1187 - recall_1: 0.0000e+00\n",
      "Epoch 170/1000\n",
      " - 2s - loss: 0.1184 - recall_1: 0.0000e+00\n",
      "Epoch 171/1000\n",
      " - 2s - loss: 0.1179 - recall_1: 0.0000e+00\n",
      "Epoch 172/1000\n",
      " - 2s - loss: 0.1183 - recall_1: 0.0000e+00\n",
      "Epoch 173/1000\n",
      " - 2s - loss: 0.1180 - recall_1: 0.0000e+00\n",
      "Epoch 174/1000\n",
      " - 2s - loss: 0.1185 - recall_1: 0.0000e+00\n",
      "Epoch 175/1000\n",
      " - 2s - loss: 0.1178 - recall_1: 0.0000e+00\n",
      "Epoch 176/1000\n",
      " - 2s - loss: 0.1181 - recall_1: 0.0000e+00\n",
      "Epoch 177/1000\n",
      " - 2s - loss: 0.1186 - recall_1: 0.0000e+00\n",
      "Epoch 178/1000\n",
      " - 2s - loss: 0.1179 - recall_1: 0.0000e+00\n",
      "Epoch 179/1000\n",
      " - 2s - loss: 0.1181 - recall_1: 0.0000e+00\n",
      "Epoch 180/1000\n",
      " - 2s - loss: 0.1179 - recall_1: 0.0000e+00\n",
      "Epoch 181/1000\n",
      " - 2s - loss: 0.1178 - recall_1: 0.0000e+00\n",
      "Epoch 182/1000\n",
      " - 2s - loss: 0.1179 - recall_1: 0.0000e+00\n",
      "Epoch 183/1000\n",
      " - 2s - loss: 0.1181 - recall_1: 0.0000e+00\n",
      "Epoch 184/1000\n",
      " - 2s - loss: 0.1177 - recall_1: 0.0000e+00\n",
      "Epoch 185/1000\n",
      " - 2s - loss: 0.1180 - recall_1: 0.0000e+00\n",
      "Epoch 186/1000\n",
      " - 2s - loss: 0.1180 - recall_1: 0.0000e+00\n",
      "Epoch 187/1000\n",
      " - 2s - loss: 0.1172 - recall_1: 0.0000e+00\n",
      "Epoch 188/1000\n",
      " - 2s - loss: 0.1173 - recall_1: 0.0019\n",
      "Epoch 189/1000\n",
      " - 2s - loss: 0.1177 - recall_1: 0.0000e+00\n",
      "Epoch 190/1000\n",
      " - 2s - loss: 0.1169 - recall_1: 0.0000e+00\n",
      "Epoch 191/1000\n",
      " - 2s - loss: 0.1178 - recall_1: 0.0000e+00\n",
      "Epoch 192/1000\n",
      " - 2s - loss: 0.1175 - recall_1: 0.0000e+00\n",
      "Epoch 193/1000\n",
      " - 2s - loss: 0.1174 - recall_1: 0.0000e+00\n",
      "Epoch 194/1000\n",
      " - 2s - loss: 0.1175 - recall_1: 0.0000e+00\n",
      "Epoch 195/1000\n",
      " - 2s - loss: 0.1172 - recall_1: 0.0000e+00\n",
      "Epoch 196/1000\n",
      " - 2s - loss: 0.1171 - recall_1: 0.0000e+00\n",
      "Epoch 197/1000\n",
      " - 2s - loss: 0.1171 - recall_1: 0.0019\n",
      "Epoch 198/1000\n",
      " - 2s - loss: 0.1171 - recall_1: 0.0000e+00\n",
      "Epoch 199/1000\n",
      " - 2s - loss: 0.1174 - recall_1: 0.0000e+00\n",
      "Epoch 200/1000\n",
      " - 2s - loss: 0.1165 - recall_1: 0.0057\n",
      "Epoch 201/1000\n",
      " - 2s - loss: 0.1172 - recall_1: 0.0000e+00\n",
      "Epoch 202/1000\n",
      " - 2s - loss: 0.1165 - recall_1: 0.0038\n",
      "Epoch 203/1000\n",
      " - 2s - loss: 0.1169 - recall_1: 0.0000e+00\n",
      "Epoch 204/1000\n",
      " - 2s - loss: 0.1170 - recall_1: 0.0000e+00\n",
      "Epoch 205/1000\n",
      " - 2s - loss: 0.1168 - recall_1: 0.0038\n",
      "Epoch 206/1000\n",
      " - 2s - loss: 0.1167 - recall_1: 0.0019\n",
      "Epoch 207/1000\n",
      " - 2s - loss: 0.1164 - recall_1: 0.0057\n",
      "Epoch 208/1000\n",
      " - 2s - loss: 0.1162 - recall_1: 0.0019\n",
      "Epoch 209/1000\n",
      " - 2s - loss: 0.1171 - recall_1: 0.0000e+00\n",
      "Epoch 210/1000\n",
      " - 2s - loss: 0.1167 - recall_1: 0.0019\n",
      "Epoch 211/1000\n",
      " - 2s - loss: 0.1172 - recall_1: 0.0019\n",
      "Epoch 212/1000\n",
      " - 2s - loss: 0.1162 - recall_1: 0.0057\n",
      "Epoch 213/1000\n",
      " - 2s - loss: 0.1162 - recall_1: 0.0019\n",
      "Epoch 214/1000\n",
      " - 2s - loss: 0.1168 - recall_1: 0.0038\n",
      "Epoch 215/1000\n",
      " - 2s - loss: 0.1169 - recall_1: 0.0076\n",
      "Epoch 216/1000\n",
      " - 2s - loss: 0.1159 - recall_1: 0.0114\n",
      "Epoch 217/1000\n",
      " - 2s - loss: 0.1165 - recall_1: 0.0057\n",
      "Epoch 218/1000\n",
      " - 2s - loss: 0.1163 - recall_1: 0.0171\n",
      "Epoch 219/1000\n",
      " - 2s - loss: 0.1158 - recall_1: 0.0133\n",
      "Epoch 220/1000\n",
      " - 2s - loss: 0.1160 - recall_1: 0.0152\n",
      "Epoch 221/1000\n",
      " - 2s - loss: 0.1161 - recall_1: 0.0038\n",
      "Epoch 222/1000\n",
      " - 2s - loss: 0.1163 - recall_1: 0.0076\n",
      "Epoch 223/1000\n",
      " - 2s - loss: 0.1165 - recall_1: 0.0133\n",
      "Epoch 224/1000\n",
      " - 2s - loss: 0.1163 - recall_1: 0.0152\n",
      "Epoch 225/1000\n",
      " - 2s - loss: 0.1164 - recall_1: 0.0210\n",
      "Epoch 226/1000\n",
      " - 2s - loss: 0.1162 - recall_1: 0.0133\n",
      "Epoch 227/1000\n",
      " - 2s - loss: 0.1155 - recall_1: 0.0229\n",
      "Epoch 228/1000\n",
      " - 2s - loss: 0.1158 - recall_1: 0.0133\n",
      "Epoch 229/1000\n",
      " - 2s - loss: 0.1164 - recall_1: 0.0133\n",
      "Epoch 230/1000\n",
      " - 2s - loss: 0.1161 - recall_1: 0.0152\n",
      "Epoch 231/1000\n",
      " - 2s - loss: 0.1161 - recall_1: 0.0133\n",
      "Epoch 232/1000\n",
      " - 2s - loss: 0.1160 - recall_1: 0.0095\n",
      "Epoch 233/1000\n",
      " - 2s - loss: 0.1156 - recall_1: 0.0210\n",
      "Epoch 234/1000\n",
      " - 2s - loss: 0.1158 - recall_1: 0.0076\n",
      "Epoch 235/1000\n",
      " - 2s - loss: 0.1152 - recall_1: 0.0267\n",
      "Epoch 236/1000\n",
      " - 2s - loss: 0.1154 - recall_1: 0.0210\n",
      "Epoch 237/1000\n",
      " - 2s - loss: 0.1156 - recall_1: 0.0267\n",
      "Epoch 238/1000\n",
      " - 2s - loss: 0.1155 - recall_1: 0.0248\n",
      "Epoch 239/1000\n",
      " - 2s - loss: 0.1153 - recall_1: 0.0171\n",
      "Epoch 240/1000\n",
      " - 2s - loss: 0.1154 - recall_1: 0.0190\n",
      "Epoch 241/1000\n",
      " - 2s - loss: 0.1152 - recall_1: 0.0190\n",
      "Epoch 242/1000\n",
      " - 2s - loss: 0.1155 - recall_1: 0.0286\n",
      "Epoch 243/1000\n",
      " - 2s - loss: 0.1155 - recall_1: 0.0114\n",
      "Epoch 244/1000\n",
      " - 2s - loss: 0.1149 - recall_1: 0.0248\n",
      "Epoch 245/1000\n",
      " - 2s - loss: 0.1157 - recall_1: 0.0267\n",
      "Epoch 246/1000\n",
      " - 2s - loss: 0.1151 - recall_1: 0.0305\n",
      "Epoch 247/1000\n",
      " - 2s - loss: 0.1148 - recall_1: 0.0381\n",
      "Epoch 248/1000\n",
      " - 2s - loss: 0.1157 - recall_1: 0.0267\n",
      "Epoch 249/1000\n",
      " - 2s - loss: 0.1148 - recall_1: 0.0324\n",
      "Epoch 250/1000\n",
      " - 2s - loss: 0.1149 - recall_1: 0.0248\n",
      "Epoch 251/1000\n",
      " - 2s - loss: 0.1155 - recall_1: 0.0190\n",
      "Epoch 252/1000\n",
      " - 2s - loss: 0.1153 - recall_1: 0.0324\n",
      "Epoch 253/1000\n",
      " - 2s - loss: 0.1148 - recall_1: 0.0362\n",
      "Epoch 254/1000\n",
      " - 2s - loss: 0.1151 - recall_1: 0.0248\n",
      "Epoch 255/1000\n",
      " - 2s - loss: 0.1153 - recall_1: 0.0190\n",
      "Epoch 256/1000\n",
      " - 2s - loss: 0.1147 - recall_1: 0.0343\n",
      "Epoch 257/1000\n",
      " - 2s - loss: 0.1153 - recall_1: 0.0190\n",
      "Epoch 258/1000\n",
      " - 2s - loss: 0.1150 - recall_1: 0.0286\n",
      "Epoch 259/1000\n",
      " - 2s - loss: 0.1147 - recall_1: 0.0362\n",
      "Epoch 260/1000\n",
      " - 2s - loss: 0.1146 - recall_1: 0.0248\n",
      "Epoch 261/1000\n",
      " - 2s - loss: 0.1142 - recall_1: 0.0400\n",
      "Epoch 262/1000\n",
      " - 2s - loss: 0.1144 - recall_1: 0.0438\n",
      "Epoch 263/1000\n",
      " - 2s - loss: 0.1144 - recall_1: 0.0419\n",
      "Epoch 264/1000\n",
      " - 2s - loss: 0.1145 - recall_1: 0.0400\n",
      "Epoch 265/1000\n",
      " - 2s - loss: 0.1146 - recall_1: 0.0362\n",
      "Epoch 266/1000\n",
      " - 2s - loss: 0.1141 - recall_1: 0.0343\n",
      "Epoch 267/1000\n",
      " - 2s - loss: 0.1140 - recall_1: 0.0400\n",
      "Epoch 268/1000\n",
      " - 2s - loss: 0.1139 - recall_1: 0.0495\n",
      "Epoch 269/1000\n",
      " - 2s - loss: 0.1143 - recall_1: 0.0476\n",
      "Epoch 270/1000\n",
      " - 2s - loss: 0.1142 - recall_1: 0.0343\n",
      "Epoch 271/1000\n",
      " - 2s - loss: 0.1139 - recall_1: 0.0381\n",
      "Epoch 272/1000\n",
      " - 2s - loss: 0.1141 - recall_1: 0.0476\n",
      "Epoch 273/1000\n",
      " - 2s - loss: 0.1136 - recall_1: 0.0533\n",
      "Epoch 274/1000\n",
      " - 2s - loss: 0.1138 - recall_1: 0.0476\n",
      "Epoch 275/1000\n",
      " - 2s - loss: 0.1137 - recall_1: 0.0495\n",
      "Epoch 276/1000\n",
      " - 2s - loss: 0.1139 - recall_1: 0.0457\n",
      "Epoch 277/1000\n",
      " - 2s - loss: 0.1143 - recall_1: 0.0495\n",
      "Epoch 278/1000\n",
      " - 2s - loss: 0.1147 - recall_1: 0.0343\n",
      "Epoch 279/1000\n",
      " - 2s - loss: 0.1141 - recall_1: 0.0533\n",
      "Epoch 280/1000\n",
      " - 2s - loss: 0.1135 - recall_1: 0.0457\n",
      "Epoch 281/1000\n",
      " - 2s - loss: 0.1139 - recall_1: 0.0400\n",
      "Epoch 282/1000\n",
      " - 2s - loss: 0.1133 - recall_1: 0.0476\n",
      "Epoch 283/1000\n",
      " - 2s - loss: 0.1139 - recall_1: 0.0457\n",
      "Epoch 284/1000\n",
      " - 2s - loss: 0.1140 - recall_1: 0.0552\n",
      "Epoch 285/1000\n",
      " - 2s - loss: 0.1137 - recall_1: 0.0552\n",
      "Epoch 286/1000\n",
      " - 2s - loss: 0.1136 - recall_1: 0.0495\n",
      "Epoch 287/1000\n",
      " - 2s - loss: 0.1136 - recall_1: 0.0457\n",
      "Epoch 288/1000\n",
      " - 2s - loss: 0.1136 - recall_1: 0.0533\n",
      "Epoch 289/1000\n",
      " - 2s - loss: 0.1131 - recall_1: 0.0667\n",
      "Epoch 290/1000\n",
      " - 2s - loss: 0.1131 - recall_1: 0.0762\n",
      "Epoch 291/1000\n",
      " - 2s - loss: 0.1135 - recall_1: 0.0629\n",
      "Epoch 292/1000\n",
      " - 2s - loss: 0.1127 - recall_1: 0.0705\n",
      "Epoch 293/1000\n",
      " - 2s - loss: 0.1129 - recall_1: 0.0743\n",
      "Epoch 294/1000\n",
      " - 2s - loss: 0.1129 - recall_1: 0.0629\n",
      "Epoch 295/1000\n",
      " - 2s - loss: 0.1130 - recall_1: 0.0552\n",
      "Epoch 296/1000\n",
      " - 2s - loss: 0.1136 - recall_1: 0.0686\n",
      "Epoch 297/1000\n",
      " - 2s - loss: 0.1129 - recall_1: 0.0571\n",
      "Epoch 298/1000\n",
      " - 2s - loss: 0.1132 - recall_1: 0.0667\n",
      "Epoch 299/1000\n",
      " - 2s - loss: 0.1130 - recall_1: 0.0590\n",
      "Epoch 300/1000\n",
      " - 2s - loss: 0.1128 - recall_1: 0.0610\n",
      "Epoch 301/1000\n",
      " - 2s - loss: 0.1125 - recall_1: 0.0743\n",
      "Epoch 302/1000\n",
      " - 2s - loss: 0.1128 - recall_1: 0.0857\n",
      "Epoch 303/1000\n",
      " - 2s - loss: 0.1127 - recall_1: 0.0762\n",
      "Epoch 304/1000\n",
      " - 2s - loss: 0.1123 - recall_1: 0.0857\n",
      "Epoch 305/1000\n",
      " - 2s - loss: 0.1128 - recall_1: 0.0819\n",
      "Epoch 306/1000\n",
      " - 2s - loss: 0.1127 - recall_1: 0.0781\n",
      "Epoch 307/1000\n",
      " - 2s - loss: 0.1129 - recall_1: 0.0743\n",
      "Epoch 308/1000\n",
      " - 2s - loss: 0.1120 - recall_1: 0.0781\n",
      "Epoch 309/1000\n",
      " - 2s - loss: 0.1116 - recall_1: 0.0819\n",
      "Epoch 310/1000\n",
      " - 2s - loss: 0.1126 - recall_1: 0.0686\n",
      "Epoch 311/1000\n",
      " - 2s - loss: 0.1121 - recall_1: 0.0857\n",
      "Epoch 312/1000\n",
      " - 2s - loss: 0.1125 - recall_1: 0.0781\n",
      "Epoch 313/1000\n",
      " - 2s - loss: 0.1121 - recall_1: 0.0800\n",
      "Epoch 314/1000\n",
      " - 2s - loss: 0.1126 - recall_1: 0.0743\n",
      "Epoch 315/1000\n",
      " - 2s - loss: 0.1118 - recall_1: 0.0933\n",
      "Epoch 316/1000\n",
      " - 2s - loss: 0.1115 - recall_1: 0.0800\n",
      "Epoch 317/1000\n",
      " - 2s - loss: 0.1116 - recall_1: 0.0971\n",
      "Epoch 318/1000\n",
      " - 2s - loss: 0.1120 - recall_1: 0.0743\n",
      "Epoch 319/1000\n",
      " - 2s - loss: 0.1122 - recall_1: 0.0990\n",
      "Epoch 320/1000\n",
      " - 2s - loss: 0.1111 - recall_1: 0.1143\n",
      "Epoch 321/1000\n",
      " - 2s - loss: 0.1121 - recall_1: 0.0800\n",
      "Epoch 322/1000\n",
      " - 2s - loss: 0.1115 - recall_1: 0.0800\n",
      "Epoch 323/1000\n",
      " - 2s - loss: 0.1119 - recall_1: 0.0990\n",
      "Epoch 324/1000\n",
      " - 2s - loss: 0.1124 - recall_1: 0.0762\n",
      "Epoch 325/1000\n",
      " - 2s - loss: 0.1113 - recall_1: 0.0838\n",
      "Epoch 326/1000\n",
      " - 2s - loss: 0.1115 - recall_1: 0.0895\n",
      "Epoch 327/1000\n",
      " - 2s - loss: 0.1112 - recall_1: 0.1010\n",
      "Epoch 328/1000\n",
      " - 2s - loss: 0.1115 - recall_1: 0.0895\n",
      "Epoch 329/1000\n",
      " - 2s - loss: 0.1117 - recall_1: 0.0819\n",
      "Epoch 330/1000\n",
      " - 2s - loss: 0.1114 - recall_1: 0.1105\n",
      "Epoch 331/1000\n",
      " - 2s - loss: 0.1112 - recall_1: 0.1067\n",
      "Epoch 332/1000\n",
      " - 2s - loss: 0.1109 - recall_1: 0.1048\n",
      "Epoch 333/1000\n",
      " - 2s - loss: 0.1113 - recall_1: 0.0895\n",
      "Epoch 334/1000\n",
      " - 2s - loss: 0.1109 - recall_1: 0.1143\n",
      "Epoch 335/1000\n",
      " - 2s - loss: 0.1112 - recall_1: 0.1048\n",
      "Epoch 336/1000\n",
      " - 2s - loss: 0.1106 - recall_1: 0.1067\n",
      "Epoch 337/1000\n",
      " - 2s - loss: 0.1107 - recall_1: 0.1143\n",
      "Epoch 338/1000\n",
      " - 2s - loss: 0.1106 - recall_1: 0.1200\n",
      "Epoch 339/1000\n",
      " - 2s - loss: 0.1111 - recall_1: 0.0990\n",
      "Epoch 340/1000\n",
      " - 2s - loss: 0.1104 - recall_1: 0.1162\n",
      "Epoch 341/1000\n",
      " - 2s - loss: 0.1109 - recall_1: 0.1010\n",
      "Epoch 342/1000\n",
      " - 2s - loss: 0.1105 - recall_1: 0.1257\n",
      "Epoch 343/1000\n",
      " - 2s - loss: 0.1105 - recall_1: 0.1124\n",
      "Epoch 344/1000\n",
      " - 2s - loss: 0.1101 - recall_1: 0.1124\n",
      "Epoch 345/1000\n",
      " - 2s - loss: 0.1096 - recall_1: 0.1238\n",
      "Epoch 346/1000\n",
      " - 2s - loss: 0.1100 - recall_1: 0.1219\n",
      "Epoch 347/1000\n",
      " - 2s - loss: 0.1094 - recall_1: 0.1371\n",
      "Epoch 348/1000\n",
      " - 2s - loss: 0.1098 - recall_1: 0.1181\n",
      "Epoch 349/1000\n",
      " - 2s - loss: 0.1101 - recall_1: 0.1371\n",
      "Epoch 350/1000\n",
      " - 2s - loss: 0.1103 - recall_1: 0.1048\n",
      "Epoch 351/1000\n",
      " - 2s - loss: 0.1099 - recall_1: 0.1143\n",
      "Epoch 352/1000\n",
      " - 2s - loss: 0.1100 - recall_1: 0.1181\n",
      "Epoch 353/1000\n",
      " - 2s - loss: 0.1096 - recall_1: 0.1162\n",
      "Epoch 354/1000\n",
      " - 2s - loss: 0.1099 - recall_1: 0.1219\n",
      "Epoch 355/1000\n",
      " - 2s - loss: 0.1097 - recall_1: 0.1276\n",
      "Epoch 356/1000\n",
      " - 2s - loss: 0.1100 - recall_1: 0.1238\n",
      "Epoch 357/1000\n",
      " - 2s - loss: 0.1097 - recall_1: 0.1257\n",
      "Epoch 358/1000\n",
      " - 2s - loss: 0.1102 - recall_1: 0.1219\n",
      "Epoch 359/1000\n",
      " - 2s - loss: 0.1100 - recall_1: 0.1257\n",
      "Epoch 360/1000\n",
      " - 2s - loss: 0.1093 - recall_1: 0.1390\n",
      "Epoch 361/1000\n",
      " - 2s - loss: 0.1093 - recall_1: 0.1390\n",
      "Epoch 362/1000\n",
      " - 2s - loss: 0.1100 - recall_1: 0.1295\n",
      "Epoch 363/1000\n",
      " - 2s - loss: 0.1091 - recall_1: 0.1257\n",
      "Epoch 364/1000\n",
      " - 2s - loss: 0.1098 - recall_1: 0.1333\n",
      "Epoch 365/1000\n",
      " - 2s - loss: 0.1092 - recall_1: 0.1124\n",
      "Epoch 366/1000\n",
      " - 2s - loss: 0.1099 - recall_1: 0.1124\n",
      "Epoch 367/1000\n",
      " - 2s - loss: 0.1085 - recall_1: 0.1467\n",
      "Epoch 368/1000\n",
      " - 2s - loss: 0.1083 - recall_1: 0.1448\n",
      "Epoch 369/1000\n",
      " - 2s - loss: 0.1090 - recall_1: 0.1581\n",
      "Epoch 370/1000\n",
      " - 2s - loss: 0.1082 - recall_1: 0.1562\n",
      "Epoch 371/1000\n",
      " - 2s - loss: 0.1090 - recall_1: 0.1371\n",
      "Epoch 372/1000\n",
      " - 2s - loss: 0.1086 - recall_1: 0.1524\n",
      "Epoch 373/1000\n",
      " - 2s - loss: 0.1080 - recall_1: 0.1467\n",
      "Epoch 374/1000\n",
      " - 2s - loss: 0.1086 - recall_1: 0.1371\n",
      "Epoch 375/1000\n",
      " - 2s - loss: 0.1082 - recall_1: 0.1581\n",
      "Epoch 376/1000\n",
      " - 2s - loss: 0.1084 - recall_1: 0.1467\n",
      "Epoch 377/1000\n",
      " - 2s - loss: 0.1083 - recall_1: 0.1524\n",
      "Epoch 378/1000\n",
      " - 2s - loss: 0.1083 - recall_1: 0.1562\n",
      "Epoch 379/1000\n",
      " - 2s - loss: 0.1076 - recall_1: 0.1562\n",
      "Epoch 380/1000\n",
      " - 2s - loss: 0.1078 - recall_1: 0.1581\n",
      "Epoch 381/1000\n",
      " - 2s - loss: 0.1082 - recall_1: 0.1638\n",
      "Epoch 382/1000\n",
      " - 2s - loss: 0.1081 - recall_1: 0.1695\n",
      "Epoch 383/1000\n",
      " - 2s - loss: 0.1080 - recall_1: 0.1600\n",
      "Epoch 384/1000\n",
      " - 2s - loss: 0.1087 - recall_1: 0.1429\n",
      "Epoch 385/1000\n",
      " - 2s - loss: 0.1082 - recall_1: 0.1429\n",
      "Epoch 386/1000\n",
      " - 2s - loss: 0.1078 - recall_1: 0.1543\n",
      "Epoch 387/1000\n",
      " - 2s - loss: 0.1085 - recall_1: 0.1581\n",
      "Epoch 388/1000\n",
      " - 2s - loss: 0.1082 - recall_1: 0.1543\n",
      "Epoch 389/1000\n",
      " - 2s - loss: 0.1075 - recall_1: 0.1600\n",
      "Epoch 390/1000\n",
      " - 2s - loss: 0.1076 - recall_1: 0.1600\n",
      "Epoch 391/1000\n",
      " - 2s - loss: 0.1076 - recall_1: 0.1562\n",
      "Epoch 392/1000\n",
      " - 2s - loss: 0.1072 - recall_1: 0.1638\n",
      "Epoch 393/1000\n",
      " - 2s - loss: 0.1073 - recall_1: 0.1676\n",
      "Epoch 394/1000\n",
      " - 2s - loss: 0.1075 - recall_1: 0.1600\n",
      "Epoch 395/1000\n",
      " - 2s - loss: 0.1068 - recall_1: 0.1600\n",
      "Epoch 396/1000\n",
      " - 2s - loss: 0.1077 - recall_1: 0.1562\n",
      "Epoch 397/1000\n",
      " - 2s - loss: 0.1070 - recall_1: 0.1714\n",
      "Epoch 398/1000\n",
      " - 2s - loss: 0.1074 - recall_1: 0.1562\n",
      "Epoch 399/1000\n",
      " - 2s - loss: 0.1075 - recall_1: 0.1524\n",
      "Epoch 400/1000\n",
      " - 2s - loss: 0.1079 - recall_1: 0.1505\n",
      "Epoch 401/1000\n",
      " - 2s - loss: 0.1072 - recall_1: 0.1562\n",
      "Epoch 402/1000\n",
      " - 2s - loss: 0.1074 - recall_1: 0.1638\n",
      "Epoch 403/1000\n",
      " - 2s - loss: 0.1075 - recall_1: 0.1600\n",
      "Epoch 404/1000\n",
      " - 2s - loss: 0.1062 - recall_1: 0.1676\n",
      "Epoch 405/1000\n",
      " - 2s - loss: 0.1071 - recall_1: 0.1543\n",
      "Epoch 406/1000\n",
      " - 2s - loss: 0.1062 - recall_1: 0.1695\n",
      "Epoch 407/1000\n",
      " - 2s - loss: 0.1064 - recall_1: 0.1695\n",
      "Epoch 408/1000\n",
      " - 2s - loss: 0.1068 - recall_1: 0.1600\n",
      "Epoch 409/1000\n",
      " - 2s - loss: 0.1069 - recall_1: 0.1543\n",
      "Epoch 410/1000\n",
      " - 2s - loss: 0.1070 - recall_1: 0.1676\n",
      "Epoch 411/1000\n",
      " - 2s - loss: 0.1061 - recall_1: 0.1886\n",
      "Epoch 412/1000\n",
      " - 2s - loss: 0.1062 - recall_1: 0.1657\n",
      "Epoch 413/1000\n",
      " - 2s - loss: 0.1060 - recall_1: 0.1676\n",
      "Epoch 414/1000\n",
      " - 2s - loss: 0.1063 - recall_1: 0.1714\n",
      "Epoch 415/1000\n",
      " - 2s - loss: 0.1061 - recall_1: 0.1657\n",
      "Epoch 416/1000\n",
      " - 2s - loss: 0.1056 - recall_1: 0.1752\n",
      "Epoch 417/1000\n",
      " - 2s - loss: 0.1069 - recall_1: 0.1676\n",
      "Epoch 418/1000\n",
      " - 2s - loss: 0.1063 - recall_1: 0.1810\n",
      "Epoch 419/1000\n",
      " - 2s - loss: 0.1057 - recall_1: 0.1790\n",
      "Epoch 420/1000\n",
      " - 2s - loss: 0.1053 - recall_1: 0.1790\n",
      "Epoch 421/1000\n",
      " - 2s - loss: 0.1057 - recall_1: 0.1638\n",
      "Epoch 422/1000\n",
      " - 2s - loss: 0.1068 - recall_1: 0.1676\n",
      "Epoch 423/1000\n",
      " - 2s - loss: 0.1057 - recall_1: 0.1752\n",
      "Epoch 424/1000\n",
      " - 2s - loss: 0.1054 - recall_1: 0.1810\n",
      "Epoch 425/1000\n",
      " - 2s - loss: 0.1056 - recall_1: 0.1848\n",
      "Epoch 426/1000\n",
      " - 2s - loss: 0.1050 - recall_1: 0.1790\n",
      "Epoch 427/1000\n",
      " - 2s - loss: 0.1056 - recall_1: 0.1810\n",
      "Epoch 428/1000\n",
      " - 2s - loss: 0.1053 - recall_1: 0.1867\n",
      "Epoch 429/1000\n",
      " - 2s - loss: 0.1045 - recall_1: 0.1886\n",
      "Epoch 430/1000\n",
      " - 2s - loss: 0.1055 - recall_1: 0.1752\n",
      "Epoch 431/1000\n",
      " - 2s - loss: 0.1055 - recall_1: 0.1752\n",
      "Epoch 432/1000\n",
      " - 2s - loss: 0.1055 - recall_1: 0.1733\n",
      "Epoch 433/1000\n",
      " - 2s - loss: 0.1049 - recall_1: 0.1752\n",
      "Epoch 434/1000\n",
      " - 2s - loss: 0.1051 - recall_1: 0.1714\n",
      "Epoch 435/1000\n",
      " - 2s - loss: 0.1043 - recall_1: 0.1867\n",
      "Epoch 436/1000\n",
      " - 2s - loss: 0.1045 - recall_1: 0.1905\n",
      "Epoch 437/1000\n",
      " - 2s - loss: 0.1043 - recall_1: 0.1771\n",
      "Epoch 438/1000\n",
      " - 2s - loss: 0.1048 - recall_1: 0.1657\n",
      "Epoch 439/1000\n",
      " - 2s - loss: 0.1048 - recall_1: 0.1810\n",
      "Epoch 440/1000\n",
      " - 2s - loss: 0.1052 - recall_1: 0.1752\n",
      "Epoch 441/1000\n",
      " - 2s - loss: 0.1049 - recall_1: 0.1886\n",
      "Epoch 442/1000\n",
      " - 2s - loss: 0.1042 - recall_1: 0.1848\n",
      "Epoch 443/1000\n",
      " - 2s - loss: 0.1040 - recall_1: 0.1924\n",
      "Epoch 444/1000\n",
      " - 2s - loss: 0.1041 - recall_1: 0.1905\n",
      "Epoch 445/1000\n",
      " - 2s - loss: 0.1037 - recall_1: 0.1924\n",
      "Epoch 446/1000\n",
      " - 2s - loss: 0.1048 - recall_1: 0.1848\n",
      "Epoch 447/1000\n",
      " - 2s - loss: 0.1046 - recall_1: 0.1905\n",
      "Epoch 448/1000\n",
      " - 2s - loss: 0.1036 - recall_1: 0.1886\n",
      "Epoch 449/1000\n",
      " - 2s - loss: 0.1037 - recall_1: 0.1886\n",
      "Epoch 450/1000\n",
      " - 2s - loss: 0.1042 - recall_1: 0.1886\n",
      "Epoch 451/1000\n",
      " - 2s - loss: 0.1042 - recall_1: 0.1829\n",
      "Epoch 452/1000\n",
      " - 2s - loss: 0.1038 - recall_1: 0.1810\n",
      "Epoch 453/1000\n",
      " - 2s - loss: 0.1033 - recall_1: 0.1886\n",
      "Epoch 454/1000\n",
      " - 2s - loss: 0.1031 - recall_1: 0.1867\n",
      "Epoch 455/1000\n",
      " - 2s - loss: 0.1029 - recall_1: 0.1905\n",
      "Epoch 456/1000\n",
      " - 2s - loss: 0.1033 - recall_1: 0.1810\n",
      "Epoch 457/1000\n",
      " - 2s - loss: 0.1026 - recall_1: 0.1981\n",
      "Epoch 458/1000\n",
      " - 2s - loss: 0.1035 - recall_1: 0.1867\n",
      "Epoch 459/1000\n",
      " - 2s - loss: 0.1034 - recall_1: 0.1771\n",
      "Epoch 460/1000\n",
      " - 2s - loss: 0.1035 - recall_1: 0.1962\n",
      "Epoch 461/1000\n",
      " - 2s - loss: 0.1033 - recall_1: 0.1867\n",
      "Epoch 462/1000\n",
      " - 2s - loss: 0.1027 - recall_1: 0.1867\n",
      "Epoch 463/1000\n",
      " - 2s - loss: 0.1036 - recall_1: 0.1733\n",
      "Epoch 464/1000\n",
      " - 2s - loss: 0.1037 - recall_1: 0.1867\n",
      "Epoch 465/1000\n",
      " - 2s - loss: 0.1036 - recall_1: 0.1829\n",
      "Epoch 466/1000\n",
      " - 2s - loss: 0.1028 - recall_1: 0.1886\n",
      "Epoch 467/1000\n",
      " - 2s - loss: 0.1025 - recall_1: 0.1943\n",
      "Epoch 468/1000\n",
      " - 2s - loss: 0.1026 - recall_1: 0.1867\n",
      "Epoch 469/1000\n",
      " - 2s - loss: 0.1033 - recall_1: 0.1867\n",
      "Epoch 470/1000\n",
      " - 2s - loss: 0.1021 - recall_1: 0.1905\n",
      "Epoch 471/1000\n",
      " - 2s - loss: 0.1024 - recall_1: 0.1848\n",
      "Epoch 472/1000\n",
      " - 2s - loss: 0.1023 - recall_1: 0.1981\n",
      "Epoch 473/1000\n",
      " - 2s - loss: 0.1027 - recall_1: 0.1943\n",
      "Epoch 474/1000\n",
      " - 2s - loss: 0.1028 - recall_1: 0.1943\n",
      "Epoch 475/1000\n",
      " - 2s - loss: 0.1020 - recall_1: 0.1829\n",
      "Epoch 476/1000\n",
      " - 2s - loss: 0.1024 - recall_1: 0.1943\n",
      "Epoch 477/1000\n",
      " - 2s - loss: 0.1026 - recall_1: 0.1848\n",
      "Epoch 478/1000\n",
      " - 2s - loss: 0.1029 - recall_1: 0.1886\n",
      "Epoch 479/1000\n",
      " - 2s - loss: 0.1023 - recall_1: 0.1924\n",
      "Epoch 480/1000\n",
      " - 2s - loss: 0.1020 - recall_1: 0.1905\n",
      "Epoch 481/1000\n",
      " - 2s - loss: 0.1019 - recall_1: 0.1943\n",
      "Epoch 482/1000\n",
      " - 2s - loss: 0.1018 - recall_1: 0.1943\n",
      "Epoch 483/1000\n",
      " - 2s - loss: 0.1017 - recall_1: 0.1943\n",
      "Epoch 484/1000\n",
      " - 2s - loss: 0.1010 - recall_1: 0.2019\n",
      "Epoch 485/1000\n",
      " - 2s - loss: 0.1019 - recall_1: 0.1924\n",
      "Epoch 486/1000\n",
      " - 2s - loss: 0.1013 - recall_1: 0.1886\n",
      "Epoch 487/1000\n",
      " - 2s - loss: 0.1013 - recall_1: 0.2019\n",
      "Epoch 488/1000\n",
      " - 2s - loss: 0.1004 - recall_1: 0.1943\n",
      "Epoch 489/1000\n",
      " - 2s - loss: 0.1013 - recall_1: 0.2000\n",
      "Epoch 490/1000\n",
      " - 2s - loss: 0.1006 - recall_1: 0.2057\n",
      "Epoch 491/1000\n",
      " - 2s - loss: 0.1014 - recall_1: 0.2000\n",
      "Epoch 492/1000\n",
      " - 2s - loss: 0.1015 - recall_1: 0.1943\n",
      "Epoch 493/1000\n",
      " - 2s - loss: 0.1011 - recall_1: 0.1924\n",
      "Epoch 494/1000\n",
      " - 2s - loss: 0.1006 - recall_1: 0.2038\n",
      "Epoch 495/1000\n",
      " - 2s - loss: 0.1017 - recall_1: 0.1886\n",
      "Epoch 496/1000\n",
      " - 2s - loss: 0.1003 - recall_1: 0.1981\n",
      "Epoch 497/1000\n",
      " - 2s - loss: 0.1017 - recall_1: 0.1905\n",
      "Epoch 498/1000\n",
      " - 2s - loss: 0.1009 - recall_1: 0.1962\n",
      "Epoch 499/1000\n",
      " - 2s - loss: 0.1004 - recall_1: 0.2038\n",
      "Epoch 500/1000\n",
      " - 2s - loss: 0.0999 - recall_1: 0.1981\n",
      "Epoch 501/1000\n",
      " - 2s - loss: 0.1002 - recall_1: 0.1943\n",
      "Epoch 502/1000\n",
      " - 2s - loss: 0.1007 - recall_1: 0.1962\n",
      "Epoch 503/1000\n",
      " - 2s - loss: 0.0998 - recall_1: 0.2057\n",
      "Epoch 504/1000\n",
      " - 2s - loss: 0.1001 - recall_1: 0.1905\n",
      "Epoch 505/1000\n",
      " - 2s - loss: 0.1000 - recall_1: 0.2019\n",
      "Epoch 506/1000\n",
      " - 2s - loss: 0.1006 - recall_1: 0.2000\n",
      "Epoch 507/1000\n",
      " - 2s - loss: 0.0998 - recall_1: 0.1981\n",
      "Epoch 508/1000\n",
      " - 2s - loss: 0.0993 - recall_1: 0.1924\n",
      "Epoch 509/1000\n",
      " - 2s - loss: 0.0995 - recall_1: 0.2076\n",
      "Epoch 510/1000\n",
      " - 2s - loss: 0.1003 - recall_1: 0.1924\n",
      "Epoch 511/1000\n",
      " - 2s - loss: 0.0994 - recall_1: 0.2038\n",
      "Epoch 512/1000\n",
      " - 2s - loss: 0.0995 - recall_1: 0.2000\n",
      "Epoch 513/1000\n",
      " - 2s - loss: 0.1000 - recall_1: 0.1924\n",
      "Epoch 514/1000\n",
      " - 2s - loss: 0.0990 - recall_1: 0.2000\n",
      "Epoch 515/1000\n",
      " - 2s - loss: 0.0994 - recall_1: 0.2038\n",
      "Epoch 516/1000\n",
      " - 2s - loss: 0.0990 - recall_1: 0.1943\n",
      "Epoch 517/1000\n",
      " - 2s - loss: 0.0988 - recall_1: 0.1905\n",
      "Epoch 518/1000\n",
      " - 2s - loss: 0.0983 - recall_1: 0.1981\n",
      "Epoch 519/1000\n",
      " - 2s - loss: 0.0997 - recall_1: 0.2076\n",
      "Epoch 520/1000\n",
      " - 2s - loss: 0.0986 - recall_1: 0.1962\n",
      "Epoch 521/1000\n",
      " - 2s - loss: 0.0988 - recall_1: 0.1867\n",
      "Epoch 522/1000\n",
      " - 2s - loss: 0.0985 - recall_1: 0.2038\n",
      "Epoch 523/1000\n",
      " - 2s - loss: 0.0983 - recall_1: 0.1981\n",
      "Epoch 524/1000\n",
      " - 2s - loss: 0.0990 - recall_1: 0.1924\n",
      "Epoch 525/1000\n",
      " - 2s - loss: 0.0992 - recall_1: 0.2000\n",
      "Epoch 526/1000\n",
      " - 2s - loss: 0.0985 - recall_1: 0.2038\n",
      "Epoch 527/1000\n",
      " - 2s - loss: 0.0997 - recall_1: 0.1962\n",
      "Epoch 528/1000\n",
      " - 2s - loss: 0.0988 - recall_1: 0.2000\n",
      "Epoch 529/1000\n",
      " - 2s - loss: 0.0975 - recall_1: 0.2057\n",
      "Epoch 530/1000\n",
      " - 2s - loss: 0.0980 - recall_1: 0.2057\n",
      "Epoch 531/1000\n",
      " - 2s - loss: 0.0983 - recall_1: 0.2019\n",
      "Epoch 532/1000\n",
      " - 2s - loss: 0.0979 - recall_1: 0.1943\n",
      "Epoch 533/1000\n",
      " - 2s - loss: 0.0974 - recall_1: 0.1981\n",
      "Epoch 534/1000\n",
      " - 2s - loss: 0.0977 - recall_1: 0.2000\n",
      "Epoch 535/1000\n",
      " - 2s - loss: 0.0977 - recall_1: 0.2000\n",
      "Epoch 536/1000\n",
      " - 2s - loss: 0.0977 - recall_1: 0.2000\n",
      "Epoch 537/1000\n",
      " - 2s - loss: 0.0981 - recall_1: 0.2038\n",
      "Epoch 538/1000\n",
      " - 2s - loss: 0.0970 - recall_1: 0.2000\n",
      "Epoch 539/1000\n",
      " - 2s - loss: 0.0970 - recall_1: 0.2057\n",
      "Epoch 540/1000\n",
      " - 2s - loss: 0.0970 - recall_1: 0.2038\n",
      "Epoch 541/1000\n",
      " - 2s - loss: 0.0971 - recall_1: 0.2057\n",
      "Epoch 542/1000\n",
      " - 2s - loss: 0.0970 - recall_1: 0.2057\n",
      "Epoch 543/1000\n",
      " - 2s - loss: 0.0971 - recall_1: 0.2038\n",
      "Epoch 544/1000\n",
      " - 2s - loss: 0.0962 - recall_1: 0.2057\n",
      "Epoch 545/1000\n",
      " - 2s - loss: 0.0964 - recall_1: 0.1943\n",
      "Epoch 546/1000\n",
      " - 2s - loss: 0.0958 - recall_1: 0.2000\n",
      "Epoch 547/1000\n",
      " - 2s - loss: 0.0962 - recall_1: 0.2076\n",
      "Epoch 548/1000\n",
      " - 2s - loss: 0.0974 - recall_1: 0.1962\n",
      "Epoch 549/1000\n",
      " - 2s - loss: 0.0967 - recall_1: 0.1943\n",
      "Epoch 550/1000\n",
      " - 2s - loss: 0.0973 - recall_1: 0.1981\n",
      "Epoch 551/1000\n",
      " - 2s - loss: 0.0969 - recall_1: 0.2038\n",
      "Epoch 552/1000\n",
      " - 2s - loss: 0.0962 - recall_1: 0.2057\n",
      "Epoch 553/1000\n",
      " - 2s - loss: 0.0962 - recall_1: 0.2057\n",
      "Epoch 554/1000\n",
      " - 2s - loss: 0.0960 - recall_1: 0.2019\n",
      "Epoch 555/1000\n",
      " - 2s - loss: 0.0959 - recall_1: 0.2114\n",
      "Epoch 556/1000\n",
      " - 2s - loss: 0.0949 - recall_1: 0.2190\n",
      "Epoch 557/1000\n",
      " - 2s - loss: 0.0963 - recall_1: 0.1962\n",
      "Epoch 558/1000\n",
      " - 2s - loss: 0.0957 - recall_1: 0.2076\n",
      "Epoch 559/1000\n",
      " - 2s - loss: 0.0963 - recall_1: 0.2114\n",
      "Epoch 560/1000\n",
      " - 2s - loss: 0.0952 - recall_1: 0.2019\n",
      "Epoch 561/1000\n",
      " - 2s - loss: 0.0949 - recall_1: 0.2057\n",
      "Epoch 562/1000\n",
      " - 2s - loss: 0.0958 - recall_1: 0.2076\n",
      "Epoch 563/1000\n",
      " - 2s - loss: 0.0955 - recall_1: 0.2076\n",
      "Epoch 564/1000\n",
      " - 2s - loss: 0.0946 - recall_1: 0.1962\n",
      "Epoch 565/1000\n",
      " - 2s - loss: 0.0934 - recall_1: 0.2038\n",
      "Epoch 566/1000\n",
      " - 2s - loss: 0.0945 - recall_1: 0.2000\n",
      "Epoch 567/1000\n",
      " - 2s - loss: 0.0955 - recall_1: 0.2076\n",
      "Epoch 568/1000\n",
      " - 2s - loss: 0.0949 - recall_1: 0.2114\n",
      "Epoch 569/1000\n",
      " - 2s - loss: 0.0947 - recall_1: 0.2000\n",
      "Epoch 570/1000\n",
      " - 2s - loss: 0.0938 - recall_1: 0.2114\n",
      "Epoch 571/1000\n",
      " - 2s - loss: 0.0942 - recall_1: 0.2095\n",
      "Epoch 572/1000\n",
      " - 2s - loss: 0.0946 - recall_1: 0.2095\n",
      "Epoch 573/1000\n",
      " - 2s - loss: 0.0939 - recall_1: 0.2076\n",
      "Epoch 574/1000\n",
      " - 2s - loss: 0.0939 - recall_1: 0.2057\n",
      "Epoch 575/1000\n",
      " - 2s - loss: 0.0939 - recall_1: 0.2095\n",
      "Epoch 576/1000\n",
      " - 2s - loss: 0.0928 - recall_1: 0.2190\n",
      "Epoch 577/1000\n",
      " - 2s - loss: 0.0941 - recall_1: 0.2095\n",
      "Epoch 578/1000\n",
      " - 2s - loss: 0.0936 - recall_1: 0.2000\n",
      "Epoch 579/1000\n",
      " - 2s - loss: 0.0925 - recall_1: 0.2152\n",
      "Epoch 580/1000\n",
      " - 2s - loss: 0.0928 - recall_1: 0.2038\n",
      "Epoch 581/1000\n",
      " - 2s - loss: 0.0932 - recall_1: 0.2114\n",
      "Epoch 582/1000\n",
      " - 2s - loss: 0.0930 - recall_1: 0.2076\n",
      "Epoch 583/1000\n",
      " - 2s - loss: 0.0928 - recall_1: 0.2038\n",
      "Epoch 584/1000\n",
      " - 2s - loss: 0.0932 - recall_1: 0.1981\n",
      "Epoch 585/1000\n",
      " - 2s - loss: 0.0924 - recall_1: 0.2076\n",
      "Epoch 586/1000\n",
      " - 2s - loss: 0.0934 - recall_1: 0.2057\n",
      "Epoch 587/1000\n",
      " - 2s - loss: 0.0919 - recall_1: 0.2019\n",
      "Epoch 588/1000\n",
      " - 2s - loss: 0.0917 - recall_1: 0.2076\n",
      "Epoch 589/1000\n",
      " - 2s - loss: 0.0912 - recall_1: 0.2152\n",
      "Epoch 590/1000\n",
      " - 2s - loss: 0.0929 - recall_1: 0.2019\n",
      "Epoch 591/1000\n",
      " - 2s - loss: 0.0912 - recall_1: 0.2057\n",
      "Epoch 592/1000\n",
      " - 2s - loss: 0.0920 - recall_1: 0.2057\n",
      "Epoch 593/1000\n",
      " - 2s - loss: 0.0923 - recall_1: 0.2152\n",
      "Epoch 594/1000\n",
      " - 2s - loss: 0.0919 - recall_1: 0.2019\n",
      "Epoch 595/1000\n",
      " - 2s - loss: 0.0931 - recall_1: 0.2000\n",
      "Epoch 596/1000\n",
      " - 2s - loss: 0.0934 - recall_1: 0.2057\n",
      "Epoch 597/1000\n",
      " - 2s - loss: 0.0918 - recall_1: 0.2114\n",
      "Epoch 598/1000\n",
      " - 2s - loss: 0.0924 - recall_1: 0.2095\n",
      "Epoch 599/1000\n",
      " - 2s - loss: 0.0918 - recall_1: 0.2133\n",
      "Epoch 600/1000\n",
      " - 2s - loss: 0.0910 - recall_1: 0.2038\n",
      "Epoch 601/1000\n",
      " - 2s - loss: 0.0908 - recall_1: 0.1981\n",
      "Epoch 602/1000\n",
      " - 2s - loss: 0.0930 - recall_1: 0.2076\n",
      "Epoch 603/1000\n",
      " - 2s - loss: 0.0914 - recall_1: 0.2114\n",
      "Epoch 604/1000\n",
      " - 2s - loss: 0.0921 - recall_1: 0.1943\n",
      "Epoch 605/1000\n",
      " - 2s - loss: 0.0919 - recall_1: 0.2133\n",
      "Epoch 606/1000\n",
      " - 2s - loss: 0.0903 - recall_1: 0.2152\n",
      "Epoch 607/1000\n",
      " - 2s - loss: 0.0889 - recall_1: 0.2152\n",
      "Epoch 608/1000\n",
      " - 2s - loss: 0.0896 - recall_1: 0.2190\n",
      "Epoch 609/1000\n",
      " - 2s - loss: 0.0906 - recall_1: 0.2152\n",
      "Epoch 610/1000\n",
      " - 2s - loss: 0.0904 - recall_1: 0.2095\n",
      "Epoch 611/1000\n",
      " - 2s - loss: 0.0910 - recall_1: 0.2038\n",
      "Epoch 612/1000\n",
      " - 2s - loss: 0.0900 - recall_1: 0.2229\n",
      "Epoch 613/1000\n",
      " - 2s - loss: 0.0897 - recall_1: 0.2171\n",
      "Epoch 614/1000\n",
      " - 2s - loss: 0.0892 - recall_1: 0.2171\n",
      "Epoch 615/1000\n",
      " - 2s - loss: 0.0890 - recall_1: 0.2229\n",
      "Epoch 616/1000\n",
      " - 2s - loss: 0.0901 - recall_1: 0.2114\n",
      "Epoch 617/1000\n",
      " - 2s - loss: 0.0894 - recall_1: 0.2286\n",
      "Epoch 618/1000\n",
      " - 2s - loss: 0.0882 - recall_1: 0.2229\n",
      "Epoch 619/1000\n",
      " - 2s - loss: 0.0894 - recall_1: 0.2305\n",
      "Epoch 620/1000\n",
      " - 2s - loss: 0.0892 - recall_1: 0.2286\n",
      "Epoch 621/1000\n",
      " - 2s - loss: 0.0881 - recall_1: 0.2248\n",
      "Epoch 622/1000\n",
      " - 2s - loss: 0.0878 - recall_1: 0.2286\n",
      "Epoch 623/1000\n",
      " - 2s - loss: 0.0880 - recall_1: 0.2248\n",
      "Epoch 624/1000\n",
      " - 2s - loss: 0.0886 - recall_1: 0.2210\n",
      "Epoch 625/1000\n",
      " - 2s - loss: 0.0901 - recall_1: 0.2210\n",
      "Epoch 626/1000\n",
      " - 2s - loss: 0.0882 - recall_1: 0.2210\n",
      "Epoch 627/1000\n",
      " - 2s - loss: 0.0880 - recall_1: 0.2210\n",
      "Epoch 628/1000\n",
      " - 2s - loss: 0.0880 - recall_1: 0.2248\n",
      "Epoch 629/1000\n",
      " - 2s - loss: 0.0875 - recall_1: 0.2267\n",
      "Epoch 630/1000\n",
      " - 2s - loss: 0.0876 - recall_1: 0.2438\n",
      "Epoch 631/1000\n",
      " - 2s - loss: 0.0867 - recall_1: 0.2438\n",
      "Epoch 632/1000\n",
      " - 2s - loss: 0.0880 - recall_1: 0.2248\n",
      "Epoch 633/1000\n",
      " - 2s - loss: 0.0876 - recall_1: 0.2286\n",
      "Epoch 634/1000\n",
      " - 2s - loss: 0.0889 - recall_1: 0.2305\n",
      "Epoch 635/1000\n",
      " - 2s - loss: 0.0879 - recall_1: 0.2286\n",
      "Epoch 636/1000\n",
      " - 2s - loss: 0.0876 - recall_1: 0.2305\n",
      "Epoch 637/1000\n",
      " - 2s - loss: 0.0868 - recall_1: 0.2381\n",
      "Epoch 638/1000\n",
      " - 2s - loss: 0.0866 - recall_1: 0.2419\n",
      "Epoch 639/1000\n",
      " - 2s - loss: 0.0868 - recall_1: 0.2286\n",
      "Epoch 640/1000\n",
      " - 2s - loss: 0.0855 - recall_1: 0.2400\n",
      "Epoch 641/1000\n",
      " - 2s - loss: 0.0875 - recall_1: 0.2400\n",
      "Epoch 642/1000\n",
      " - 2s - loss: 0.0860 - recall_1: 0.2343\n",
      "Epoch 643/1000\n",
      " - 2s - loss: 0.0866 - recall_1: 0.2267\n",
      "Epoch 644/1000\n",
      " - 2s - loss: 0.0860 - recall_1: 0.2438\n",
      "Epoch 645/1000\n",
      " - 2s - loss: 0.0881 - recall_1: 0.2419\n",
      "Epoch 646/1000\n",
      " - 2s - loss: 0.0852 - recall_1: 0.2571\n",
      "Epoch 647/1000\n",
      " - 2s - loss: 0.0858 - recall_1: 0.2610\n",
      "Epoch 648/1000\n",
      " - 2s - loss: 0.0866 - recall_1: 0.2552\n",
      "Epoch 649/1000\n",
      " - 2s - loss: 0.0856 - recall_1: 0.2381\n",
      "Epoch 650/1000\n",
      " - 2s - loss: 0.0870 - recall_1: 0.2495\n",
      "Epoch 651/1000\n",
      " - 2s - loss: 0.0856 - recall_1: 0.2457\n",
      "Epoch 652/1000\n",
      " - 2s - loss: 0.0846 - recall_1: 0.2629\n",
      "Epoch 653/1000\n",
      " - 2s - loss: 0.0863 - recall_1: 0.2610\n",
      "Epoch 654/1000\n",
      " - 2s - loss: 0.0861 - recall_1: 0.2724\n",
      "Epoch 655/1000\n",
      " - 2s - loss: 0.0871 - recall_1: 0.2514\n",
      "Epoch 656/1000\n",
      " - 2s - loss: 0.0853 - recall_1: 0.2762\n",
      "Epoch 657/1000\n",
      " - 2s - loss: 0.0852 - recall_1: 0.2571\n",
      "Epoch 658/1000\n",
      " - 2s - loss: 0.0837 - recall_1: 0.2667\n",
      "Epoch 659/1000\n",
      " - 2s - loss: 0.0836 - recall_1: 0.2648\n",
      "Epoch 660/1000\n",
      " - 2s - loss: 0.0857 - recall_1: 0.2610\n",
      "Epoch 661/1000\n",
      " - 2s - loss: 0.0843 - recall_1: 0.2724\n",
      "Epoch 662/1000\n",
      " - 2s - loss: 0.0829 - recall_1: 0.2781\n",
      "Epoch 663/1000\n",
      " - 2s - loss: 0.0853 - recall_1: 0.2552\n",
      "Epoch 664/1000\n",
      " - 2s - loss: 0.0839 - recall_1: 0.2914\n",
      "Epoch 665/1000\n",
      " - 2s - loss: 0.0846 - recall_1: 0.2686\n",
      "Epoch 666/1000\n",
      " - 2s - loss: 0.0838 - recall_1: 0.2914\n",
      "Epoch 667/1000\n",
      " - 2s - loss: 0.0839 - recall_1: 0.2781\n",
      "Epoch 668/1000\n",
      " - 2s - loss: 0.0829 - recall_1: 0.2781\n",
      "Epoch 669/1000\n",
      " - 2s - loss: 0.0837 - recall_1: 0.2800\n",
      "Epoch 670/1000\n",
      " - 2s - loss: 0.0831 - recall_1: 0.2781\n",
      "Epoch 671/1000\n",
      " - 2s - loss: 0.0815 - recall_1: 0.2857\n",
      "Epoch 672/1000\n",
      " - 2s - loss: 0.0840 - recall_1: 0.2838\n",
      "Epoch 673/1000\n",
      " - 2s - loss: 0.0837 - recall_1: 0.2762\n",
      "Epoch 674/1000\n",
      " - 2s - loss: 0.0828 - recall_1: 0.2800\n",
      "Epoch 675/1000\n",
      " - 2s - loss: 0.0823 - recall_1: 0.2952\n",
      "Epoch 676/1000\n",
      " - 2s - loss: 0.0828 - recall_1: 0.2838\n",
      "Epoch 677/1000\n",
      " - 2s - loss: 0.0830 - recall_1: 0.2895\n",
      "Epoch 678/1000\n",
      " - 2s - loss: 0.0843 - recall_1: 0.2876\n",
      "Epoch 679/1000\n",
      " - 2s - loss: 0.0840 - recall_1: 0.2857\n",
      "Epoch 680/1000\n",
      " - 2s - loss: 0.0835 - recall_1: 0.2933\n",
      "Epoch 681/1000\n",
      " - 2s - loss: 0.0840 - recall_1: 0.2933\n",
      "Epoch 682/1000\n",
      " - 2s - loss: 0.0820 - recall_1: 0.2933\n",
      "Epoch 683/1000\n",
      " - 2s - loss: 0.0823 - recall_1: 0.2933\n",
      "Epoch 684/1000\n",
      " - 2s - loss: 0.0821 - recall_1: 0.2838\n",
      "Epoch 685/1000\n",
      " - 2s - loss: 0.0825 - recall_1: 0.2838\n",
      "Epoch 686/1000\n",
      " - 2s - loss: 0.0797 - recall_1: 0.3067\n",
      "Epoch 687/1000\n",
      " - 2s - loss: 0.0813 - recall_1: 0.2857\n",
      "Epoch 688/1000\n",
      " - 2s - loss: 0.0833 - recall_1: 0.2952\n",
      "Epoch 689/1000\n",
      " - 2s - loss: 0.0813 - recall_1: 0.3010\n",
      "Epoch 690/1000\n",
      " - 2s - loss: 0.0816 - recall_1: 0.3200\n",
      "Epoch 691/1000\n"
     ]
    }
   ],
   "source": [
    "# Train the model here\n",
    "\n",
    "model = alex()   # alex(), nvidia_model(), leNet()\n",
    "\n",
    "# 9. Fit model on training data\n",
    "history_mask = model.fit(X_train, Y_train, batch_size = 64, epochs=1000, verbose=2)\n",
    "\n",
    "\n",
    "# 10. Evaluate model on test data\n",
    "score = model.evaluate(X_test, Y_test, verbose=0)\n",
    "\n",
    "print(\"score: \"+str(score))\n",
    "\n",
    "#model.save('my_modelDec17_sign_best.h5')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {
    "lines_to_next_cell": 2,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot training accuracy or recall\n",
    "plt.plot(history_mask.history['recall_16'])\n",
    "#plt.title('Training set Recall')\n",
    "#plt.ylabel('Recall')\n",
    "#plt.xlabel('Epoch')\n",
    "plt.legend(['Train', 'Test'], loc='upper left')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "jupytext": {
   "text_representation": {
    "extension": ".py",
    "format_name": "light",
    "format_version": "1.5",
    "jupytext_version": "1.3.0"
   }
  },
  "kernelspec": {
   "display_name": "Python 3.6 - AzureML",
   "language": "python",
   "name": "python3-azureml"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
